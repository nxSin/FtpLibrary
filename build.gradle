apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 2
        versionName "1.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {}
        app_test {}
    }
}
repositories {
    flatDir {
        dirs 'libs' //this way we can find the .aar file in libs folder
    }
    //zzw远程仓库
    maven {
        url 'http://47.88.212.167:8081/nexus/content/groups/public/'
    }
    //zzw远程仓库
//    maven { url properties.REMOTE_REP_URL }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    compile files('libs/commons-net-3.3-ftp.jar')
}

////上传到bintary
////bintray需要
//apply plugin: 'com.jfrog.bintray'
//apply plugin: 'com.github.dcendents.android-maven'
////def siteUrl = 'https://github.com/'   // 项目的主页
//
//def gitUrl = 'https://github.com/nxSin/FtpLibrary.git'   // Git仓库的url，非要写个vcs的url,否则报404
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//version = "1.0" //发布版本号
//group = "com.xin" //最终引用形式，如compile 'com.xin.ftplibrary:1.0'，其中ftplibrary在后面配置
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//    pkg {
//        repo = 'mylibrary'//自己创建的仓库名字
//        name = 'ftplibrary'//上传到JCenter的名字,最终引用的名字
////        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = ['MIT']//不能随便写，只能是仓库创建时选择的license type
//        userOrg = 'nsinlibrary' //自己创建的organization名称
//        publish = true // 是否是公开项目，公开别人可以引用
//        version {
//            name = '1.0'
//            desc = 'this is a ftp library for Android.'//描述，自己定义
//            released  = new Date()
//            vcsTag = 'v1.0'
//            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
//        }
//    }
//    configurations = ['archives']
//}
//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
//            project {
//                packaging 'aar'
//                // Add your description here
//                name 'A ftp library for Android.'
//                description 'library.'
////                url siteUrl
//                // Set your license
//                licenses {
//                    license {
//                        name 'MIT' //和之前自己定义的协议一致
//                        url 'https://raw.githubusercontent.com/minggo620/Pluto-Android/master/LICENSE'
//                    }
//                }
//                developers {
//                    developer {
//                        id 'nsin'        //填写bintray或者github的用户名
//                        name 'xin'         //姓名
//                        email 'nxlittle@gmail.com'//邮箱
//                    }
//                }
//                scm {
//                    connection gitUrl
////                    developerConnection gitUrl
////                    url siteUrl
//                }
//            }
//        }
//    }
//}
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//task javadoc(type: Javadoc) {
//    failOnError false //必须添加以免出错
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
////源码和jar就不上传了
////    archives javadocJar
////    archives sourcesJar
//}
//javadoc {
//    options{
//        //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
//        encoding "UTF-8"
//        charSet 'UTF-8'
//        author true
//        version true
//        links "http://docs.oracle.com/javase/7/docs/api"
//    }
//}

////自己上传仓库使用依赖maven插件
//apply plugin: 'maven'
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//afterEvaluate { project ->
//    uploadArchives {
//        repositories {
//            mavenDeployer {
//                pom.groupId = properties.FTP_GROUP_ID
//                pom.artifactId = properties.FTP_POM_ARTIFACT_ID
//                pom.version = properties.FTP_VERSION_NAME
////                repository(url: properties.LOCAL_REPRO_URL) {
////                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
////                }
//                repository(url: properties.REMOTE_REPRO_URL) {
//                    authentication(userName: properties.USER_NAME, password: properties.USER_PSW)
//                }
////                snapshotRepository(url: SNAPSHOT_REPOSITORY_URL) {
////                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
////                }
//            }
//        }
//    }
//
//    task androidJavadocs(type: Javadoc) {
//        source = android.sourceSets.main.java.srcDirs
//        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    }
//
//    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//        classifier = 'javadoc'
//        from androidJavadocs.destinationDir
//    }
//
//    task androidSourcesJar(type: Jar) {
//        classifier = 'sources'
//        from android.sourceSets.main.java.sourceFiles
//    }
//
//    artifacts {
//        //上传源码文件
////      archives androidSourcesJar
//        //上传doc
////        archives androidJavadocsJar
//    }
//}